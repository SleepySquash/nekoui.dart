name: CI

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_VER: "3.0"

jobs:

  ################
  # Pull Request #
  ################

  pr:
    if: ${{ github.event_name == 'pull_request' }}
    needs:
      - build
      - dartdoc
    runs-on: ubuntu-latest
    steps:
      - run: true



  
  ############
  # Building #
  ############

  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - apk
          - linux
          - windows
          - web
          #- macos
          #- ios
    runs-on: ${{ ((matrix.platform == 'ios' || matrix.platform == 'macos')
                                                  && 'macos-latest')
                 || (matrix.platform == 'windows' && 'windows-latest')
                 || (matrix.platform == 'linux'   && 'ubuntu-22.04')
                                                  || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: $FLUTTER_VER
          channel: stable
          cache: true
      - run: sudo apt-get update -y
        if: ${{ matrix.platform == 'linux' }}
      - run: sudo apt-get install -y
             ninja-build
             libunwind-dev
             libgtk-3-dev
             libgstreamer1.0-dev
             libgstreamer-plugins-base1.0-dev
             libpulse-dev
        if: ${{ matrix.platform == 'linux' }}
      - run: flutter config --enable-${{ matrix.platform }}-desktop
        if: ${{ matrix.platform == 'linux'
                || matrix.platform == 'macos'
                || matrix.platform == 'windows' }}
      - run: make flutter.pub
      - run: make flutter.build platform=${{ matrix.platform }}
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: build/linux
        if: ${{ matrix.platform == 'linux' }}
      - uses: actions/upload-artifact@v3
        with:
          name: web
          path: build/web
        if: ${{ matrix.platform == 'web' }}
      - uses: actions/upload-artifact@v3
        with:
          name: apk
          path: build/app/outputs/flutter-apk/app-release.apk
        if: ${{ matrix.platform == 'apk' }}
      - uses: actions/upload-artifact@v3
        with:
          name: windows
          path: build/windows/runner/Release
        if: ${{ matrix.platform == 'windows' }}
      - uses: actions/upload-artifact@v3
        with:
          name: linux
          path: build/linux
        if: ${{ matrix.platform == 'linux' }}
  
  dartdoc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: $FLUTTER_VER
          channel: stable
          cache: true
      - run: make flutter.pub
      - run: make docs.dart clean=yes
      - uses: actions/upload-artifact@v3
        with:
          name: docs
          path: doc/api




  ###########
  # Release #
  ###########
  
  gh-pages:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    needs:
      - dartdoc
    steps:
      - uses: actions/checkout@v3
        with:
          ref: gh-pages
      - uses: actions/download-artifact@v3
        with:
          name: docs
          path: main
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./main
          destination_dir: main
          commit_message: ${{ github.event.head_commit.message }}
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

  release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - run: test "$CI_COMMIT_TAG" == "v$(make flutter.version)"
      - run: make gitlab.release.notes project-url="$CI_PROJECT_URL" > ./release_notes.md
      - uses: actions/download-artifact@v3
        with:
          name: apk
          path: apk
      - uses: actions/download-artifact@v3
        with:
          name: windows
          path: windows
      - uses: actions/download-artifact@v3
        with:
          name: linux
          path: linux
      - uses: actions/download-artifact@v3
        with:
          name: web
          path: web
      - uses: actions/download-artifact@v3
        with:
          name: docs
          path: docs
      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'windows.zip'
          path: windows
      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'linux.zip'
          path: linux
      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'web.zip'
          path: web
      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'docs.zip'
          path: docs
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "**/*.apk, windows.zip, linux.zip, web.zip, docs.zip"
          allowUpdates: true
          name: $(make flutter.version)
          bodyFile: ./release_notes.md
          token: ${{ secrets.GITHUB_TOKEN }}
