name: CI

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_VER: "3.0"

jobs:

  ################
  # Pull Request #
  ################

  pr:
    if: ${{ github.event_name == 'pull_request' }}
    needs:
      - build
      - dartdoc
    runs-on: ubuntu-latest
    steps:
      - run: true



  
  ############
  # Building #
  ############

  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - apk
          - web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: $FLUTTER_VER
          channel: stable
          cache: true
      - run: make flutter.pub
      - run: make flutter.build platform=${{ matrix.platform }}
      - uses: actions/upload-artifact@v3
        with:
          name: web
          path: build/web
        if: ${{ matrix.platform == 'web' }}
      - uses: actions/upload-artifact@v3
        with:
          name: apk
          path: build/app/outputs/flutter-apk/app-release.apk
        if: ${{ matrix.platform == 'apk' }}
  
  dartdoc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: $FLUTTER_VER
          channel: stable
          cache: true
      - run: make flutter.pub
      - run: make docs.dart clean=yes
      - uses: actions/upload-artifact@v3
        with:
          name: docs
          path: doc/api




  ###########
  # Release #
  ###########
  
  gh-pages:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    needs:
      - dartdoc
    steps:
      - uses: actions/checkout@v3
        with:
          ref: gh-pages
      - uses: actions/download-artifact@v3
        with:
          name: docs
          path: main
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./main
          destination_dir: main
          commit_message: ${{ github.event.head_commit.message }}
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

  release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "**/*.apk"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
